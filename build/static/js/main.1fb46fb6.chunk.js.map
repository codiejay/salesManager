{"version":3,"sources":["Assets/googleIcon.svg","Assets/userIcon.svg","Components/BigButton/BigButton.jsx","Firebase.js","Pages/Login/Login.jsx","Components/Sidebar/Sidebar.jsx","Components/LoggedInHeader/LoggedInHeader.jsx","Pages/Store/Store.jsx","Pages/AddStock/AddStock.jsx","Components/StockItem/StockItem.jsx","Pages/Stocks/Stocks.jsx","Pages/StockPage/StockPage.jsx","Pages/AddStore/AddStore.jsx","Pages/Manage/Manage.jsx","Components/Expenses/Expenses.jsx","Pages/StorePage/StorePage.jsx","Pages/SoldStock/SoldStock.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","BigButton","props","Imgstyle","background","bttImg","width","height","id","className","style","bttnTitle","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","formSubmitted","e","preventDefault","pin","firestore","collection","doc","approvedUser","get","then","data","secretPin","toString","provider","auth","GoogleAuthProvider","signInWithPopup","user","displayName","split","set","admin","adminEmail","email","alert","useState","setPin","onSubmit","placeholder","onChange","target","value","type","GoogleIcon","onClick","Sidebar","addCurrentBttn","console","log","window","location","href","currentBttn","to","data-name","LoggedInHeader","avatarStyle","userImg","borderRadius","transform","signOut","Store","loggedIn","cashTotal","cashReturn","cashProfit","AddStock","InputChangeHandler","setnewStock","newStock","stockName","stockQuantity","parseInt","stockWatchQuantity","purchasePrice","sellingPrice","purchaseStore","buttonState","buttonClick","lastUpdate","addedStock","stockAdded","ShowSucess","opacity","PushItem","htmlFor","maxLength","addStockBttn","StockItem","itemId","itemName","itemQuantity","itemLastUpdate","join","Stocks","stocksRef","useEffect","setStockAppear","handleViews","getAttribute","setcurrentView","stockList","length","runningOutStocks","outOfStock","stockArr","where","onSnapshot","res","docs","forEach","item","push","setStockList","runningOutArr","setRunningOutStocks","outOfStockArr","setOutOfStock","currentView","stockAppear","display","map","index","date","key","StockPage","redirectStockPageHandler","useParams","dateClass","Date","fullDate","getDate","getMonth","getFullYear","handleInputChange","setStock","stock","d","arr","setStockId","stockId","updateButton","setUpdateButton","redirectStockPage","adminInCharge","delete","storesList","storeName","update","AddStore","formSumitted","makeNewStore","attendant","inputChangeHandler","setStoreName","setAttendant","name","buttonText","Manage","deleteStore","storeList","Expenses","cost","expenseTitle","expenseBody","expenseDate","expenseTime","deleteExpense","StorePage","currentDate","storeExpenseRef","toLowerCase","doneBttnClicked","stockCurrentQuantity","newValue","previousElementSibling","elemName","dataset","storeRef","storeStockRef","mainStockQuantity","overViewOptions","text","textContent","setOverViewStatus","optionClicked","setView","overViewCurrentDate","setOverViewDate","setCurrentStore","salesArr","stocksArr","expensesArr","profit","setAvailablesStock","totalAmount","setProfit","toLocaleString","setSales","setExpenses","deleteExpenses","querySnapShot","ref","availablesStock","view","sales","expenses","overViewDate","overviewSales","setOverviewSales","overviewExpenses","setOverviewExpenses","overViewStatus","showOverViewData","setShowOverViewData","overViewProfit","setOverViewProfit","color","fontSize","marginBottom","textTransform","padding","backgroundColor","title","body","time","max","min","mainDate","reverse","SoldStock","stockRef","valid","setValid","locationRef","querySnap","FieldValue","increment","data-fill","staffInCharge","imei","marginTop","customerName","customerAddress","customerPhoneNumber","App","userName","currentUser","setCurrentStoreName","newArr","setStoreList","event","setRedirectStockPage","store","setButtonText","attendants","createdBy","dateAdded","show","setTimeout","setaddStockBttn","getTime","setaddedStock","setShowSucess","success","setInterval","runThis","clearInterval","catch","err","currentStoreName","signOutHandler","setLoggedIn","error","onAuthStateChanged","setIsAdmin","setUserImg","photoURL","totals","StoreStock","isadmin","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1fb46fb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/googleIcon.20608d5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/userIcon.6b4c7eba.svg\";","import React from 'react';\nimport './BigButton.scss';\n\nconst BigButton = (props) => { \n\n  const Imgstyle = { \n    background: `url(${props.bttImg}) no-repeat center/contain`,\n    width: '25px',\n    height: '25px'\n  }\n  return (\n    <div id='bigBttn'>\n      <div \n        className=\"bttnImg\"\n        style={Imgstyle}\n      >\n      </div>\n      <button> \n        <h1>{props.bttnTitle}</h1>\n      </button>\n    </div> \n  )\n};\n\nexport default BigButton;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyDbCEi0Mynj3hvW_x73fwybaRqjwAUGNBg\",\n  authDomain: \"storemanager-dfe02.firebaseapp.com\",\n  databaseURL: \"https://storemanager-dfe02.firebaseio.com\",\n  projectId: \"storemanager-dfe02\",\n  storageBucket: \"storemanager-dfe02.appspot.com\",\n  messagingSenderId: \"279517551995\",\n  appId: \"1:279517551995:web:e0751015370fce690571de\",\n  measurementId: \"G-6LWQR0VLZH\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React, { useState, useEffect } from 'react';\nimport './Login.scss';\nimport BigButton from '../../Components/BigButton/BigButton';\nimport GoogleIcon from '../../Assets/googleIcon.svg';\nimport firebase from '../../Firebase';\nimport { Redirect } from 'react-router-dom';\n\nconst Login = (props) => { \n\n  const formSubmitted = (e) => { \n    e.preventDefault();\n    \n    if(pin) { \n      firebase.firestore()\n      .collection('approved')\n      .doc(props.approvedUser)\n      .get()\n      .then((data) => { \n        if(data.data().secretPin.toString() === pin) { \n          let provider = new firebase.auth.GoogleAuthProvider();\n\n          firebase.auth().signInWithPopup(provider)\n            .then(data => {\n              firebase.firestore()\n              .collection('approved')\n              .doc(props.approvedUser)\n              .collection('admins') \n              .doc(`${data.user.displayName.split(' ')[0]}`)\n              .set({ \n                admin: data.user.displayName,\n                adminEmail: data.user.email,\n              })\n            })\n\n        }\n        else alert('wrong, password')\n      })\n    }\n  };\n\n  const inputChange = (e) => { \n    setPin(e.target.value);\n  };\n\n  let [pin, setPin] = useState();\n  return ( \n    <div id='login'> \n      <div className=\"userIcon\"></div>\n      <form onSubmit={formSubmitted}>\n        <input \n          placeholder='your approved pin'\n          onChange={inputChange}\n          type='password'\n        />\n        <BigButton \n          bttImg={GoogleIcon}\n          bttnTitle='login with a google account'\n          onClick={formSubmitted}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport './Sidebar.scss';\nimport { Link } from 'react-router-dom';\n\nconst Sidebar = (props) => { \n\n  const addCurrentBttn = (e) => { \n    console.log()\n  }\n  \n\n  let [currentBttn , setcurrentBttn] = useState(window.location.href.split('/')[3])\n  return ( \n    <div \n      id='sideBar'\n    > \n        <Link \n          onClick={addCurrentBttn} \n          id={(currentBttn === 'addstock') ? 'currentBttn' : ''}\n          to='/addstock'\n          data-name='newstock'\n        >\n            New Stock\n        </Link>\n        <Link \n          to='/addstore'\n          onClick={addCurrentBttn} \n          id={(currentBttn === 'addstore') ? 'currentBttn' : ''}\n          data-name='newstore'\n        >\n          New Store\n        </Link>\n        <Link \n          onClick={addCurrentBttn} \n          to='/manage'\n          id={(currentBttn === 'manage') ? 'currentBttn' : ''}\n          data-name='manage'\n        >\n          Manage\n        </Link>\n        <Link \n          onClick={addCurrentBttn} \n          to='/stocks'\n          id={(currentBttn === 'stocks') ? 'currentBttn' : ''}\n          data-name='stocks'\n        >\n          Stocks\n        </Link>\n    </div>\n  )\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport './LoggedInHeader.scss';\nimport userAvatar from '../../Assets/userIcon.svg'\nimport BigButton from '../BigButton/BigButton';\nimport { Link } from 'react-router-dom';\n\nconst LoggedInHeader = (props) => { \n  \n  const avatarStyle = { \n    background: `url(${props.userImg}) no-repeat center/contain`,\n    borderRadius: '12px',\n    transform: 'scale(0.8)'\n  }\n  return ( \n    <nav id='nav'>\n      <Link to='/store'><div id=\"menuButton\"><div></div></div></Link>\n      <div className=\"userAvatar\">\n        <div style={avatarStyle}></div>\n      </div>\n      <button \n        onClick={props.signOut}\n      >\n        sign out\n      </button>\n    </nav>\n  )\n}\n\nexport default LoggedInHeader;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Sidebar from '../../Components/Sidebar/Sidebar';\nimport LoggedInHeader from '../../Components/LoggedInHeader/LoggedInHeader';\nimport './Store.scss';\n\n\nconst Store = (props) => { \n\n  return ( \n    props.loggedIn \n    ?\n    <div id='storePage'>\n      <LoggedInHeader \n        signOut={props.signOut}\n        userImg= {props.userImg}\n      />\n      <div id='storeBody'>\n        <Sidebar />\n        { \n          props.admin \n          ? \n          <div className=\"storeMain\">\n          <div id='cashStatus'>\n            <h3>{props.cashTotal}</h3>\n            <p>Today's sales in cash</p>\n          </div>\n\n          <div id='cashStatus'>\n            <h3>{props.cashReturn}</h3>\n            <p>Expected Cash Return</p>\n          </div>\n\n          <div id='cashStatus'>\n            <h3>{props.cashProfit}</h3>\n            <p>Expected Profit</p>\n          </div>\n        </div>\n        : \n        ''\n        }\n      </div>\n    </div>\n    : \n    <Redirect to='/' />\n  )\n};\n\nexport default Store;","import React from 'react';\nimport LoggedInHeader from '../../Components/LoggedInHeader/LoggedInHeader';\nimport { Redirect } from 'react-router-dom';\nimport Sidebar from '../../Components/Sidebar/Sidebar';\nimport './AddStock.scss';\nimport { useState } from 'react';\nimport firebase from '../../Firebase';\nimport { useEffect } from 'react';\n\nconst AddStock = (props) => { \n\n\n  const formSubmitted = (e) => { \n    e.preventDefault();\n\n    if(newStock.stockName) { \n      props.PushItem(newStock);\n    }\n  };\n\n  //edit this to commit murder\n  //\n  // const Updatebutton = (e) => { \n  //   if(newStock.stockName &&\n  //     newStock.stockQuantity && \n  //     newStock.stockWatchQuantity &&\n  //     newStock.stockSelling &&\n  //     newStock.stockPrice\n  //     // newStock.userPin.length > 4\n  //     ) { \n\n  //       setbuttonState({...buttonState, buttonState: 'regularButton'})\n  //       props.PushItem(newStock)\n  //     }\n\n  //     else {\n  //       setbuttonState({...buttonState, buttonState: 'fadedButton'})\n  //     }\n  // }\n\n  const InputChangeHandler = (e) => { \n    \n    switch(e.target.id) { \n      case 'itemName': \n        setnewStock({...newStock, stockName: `${e.target.value}`});\n        break;\n      case 'itemQuantity':\n        setnewStock({...newStock, stockQuantity: parseInt(e.target.value)});\n        break;\n      case 'watchQuantity': \n        setnewStock({...newStock, stockWatchQuantity: parseInt(e.target.value)});\n        break;\n      case 'salesPrice': \n        setnewStock({...newStock, purchasePrice: parseInt(e.target.value)});\n        break;\n        case 'sellingPrice': \n          setnewStock({...newStock, sellingPrice: parseInt(e.target.value)});\n          break;\n        case 'purchaseStore': \n          setnewStock({ \n            ...newStock,  \n            purchaseStore: e.target.value\n          })\n      // case 'pin': \n      // setnewStock({...newStock, userPin: `${e.target.value}`});\n      // break;\n    }\n  }\n\n\n  let [buttonState, setbuttonState] = useState({\n    buttonState: 'regularButton',\n    buttonClick: 'formSubmitted'\n  });\n\n  let [newStock, setnewStock] = useState({ \n    stockName: '',\n    stockQuantity: 0,\n    stockWatchQuantity: 0,\n    sellingPrice: 0,\n    purchasePrice: 0,\n    lastUpdate: 0,\n    purchaseStore: '',\n    // userPin: '',\n  });\n\n  let [stockAdded, setStockAdded] = useState(props.addedStock);\n  let [addToStockBttn, setaddToStockBttn] = useState('add to store');\n  let [ShowSucess, setShowSucess] = useState(props.ShowSucess);\n  return ( \n    props.loggedIn \n    ?\n    <div id='addStockPage'>\n      <LoggedInHeader \n        signOut={props.signOut}\n        userImg= {props.userImg}\n      />\n      <div id='addStockBody'>\n        <Sidebar />\n        <div className='addStockMain'>\n          <div id='header'>\n            <p className='heading'>add new item to store</p>\n            <div \n              className= 'postStatus'\n              style={{ \n                opacity: `${props.ShowSucess ? '1' : '0'}`\n              }}\n            >\n              <div \n                className={(stockAdded[0] === 'S') ? 'success' : 'error'}\n              ></div>\n              <p>\n                {stockAdded}\n              </p> \n            </div>\n          </div>\n          <form onSubmit={formSubmitted}>\n            <div className='formContent'>\n              <div>\n                <label htmlFor='itemName'>item's name</label>\n                <input\n                  onChange={InputChangeHandler} \n                  type='text'\n                  id='itemName'\n                  placeholder='techno 2020'\n                />\n              </div>\n              \n              <div>\n                <label htmlFor='itemQuantity'>item's quantity</label>\n                <input \n                  onChange={InputChangeHandler} \n                  type='number'\n                  id='itemQuantity'\n                  placeholder='30'\n                />\n              </div>\n\n              <div>\n                <label htmlFor='watchQuantity'>watch quantity</label>\n                <input \n                  type='number'\n                  onChange={InputChangeHandler} \n                  id='watchQuantity'\n                  placeholder='4'\n                />\n              </div>\n\n              <div>\n                <label htmlFor='salesPrice'>purchase price</label>\n                <input \n                  onChange={InputChangeHandler} \n                  type='number'\n                  id='salesPrice'\n                  placeholder='purchase price'\n                  maxLength='8'\n                />\n              </div>\n\n              <div>\n                <label htmlFor='sellingPrice'>selling price</label>\n                <input \n                  onChange={InputChangeHandler} \n                  type='number'\n                  id='sellingPrice'\n                  placeholder='selling price'\n                  maxLength='8'\n                />\n              </div>\n              <div>\n                <label htmlFor='itemName'>purchase store</label>\n                <input\n                  onChange={InputChangeHandler} \n                  type='text'\n                  id='purchaseStore'\n                  placeholder='emcee solutons'\n                />\n              </div>\n\n              {/* <div>\n                <label htmlFor='pin'>your pin </label>\n                <input \n                  onChange={InputChangeHandler} \n                  type='number'\n                  id='pin'\n                  placeholder='90998777'\n                  value={newStock.userPin}\n                  maxLength='8'\n                />\n              </div> */}\n            </div>\n            <button \n              className={buttonState.buttonState}\n            >\n              {props.addStockBttn}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n    : \n    <Redirect to='/'/>\n  )\n}\n\nexport default AddStock;","import React from 'react';\nimport './StockItem.scss';\nimport { Link } from 'react-router-dom'\n\nconst StockItem = (props) => { \n\n  return ( \n    <Link \n      id={props.itemId} \n      className='stockItem' \n      to={`${props.location}${props.itemId}`}\n    > \n      <div className=\"mainItem\">\n        <h3 id='itemName'> {props.itemName} </h3>\n        <h3 id=\"itemQuantity\"> {props.itemQuantity} </h3>\n        <h3 id=\"itemLastUpdate\"> {(props.lastUpdate === parseInt(0)) ? props.itemLastUpdate.split(' ').join('/') : props.lastUpdate.split(' ').join('/')} </h3>\n      </div>\n    </Link>\n  )\n};\n\nexport default StockItem;","import React, { useEffect, useState } from 'react';\nimport { \n  Redirect,\n  Link,\n} from 'react-router-dom';\nimport LoggedInHeader from '../../Components/LoggedInHeader/LoggedInHeader';\nimport Sidebar from '../../Components/Sidebar/Sidebar';\nimport StockItem from '../../Components/StockItem/StockItem';\nimport firebase from '../../Firebase';\nimport './Stocks.scss'\n\nconst Stocks = (props) => { \n\n  let approvedUser = 'bolu';\n\n  let stocksRef = firebase.firestore()\n  .collection('approved')\n  .doc(approvedUser)\n  .collection('stock')\n\n  useEffect(() => {\n    setStockAppear(1);\n  }, [])\n\n  const handleViews = (e) => { \n    let elem = e.target.getAttribute('id');\n    \n    switch(elem) { \n      case 'currentStocks': \n        setcurrentView('current');\n        setStockAppear(stockList.length);\n        break;\n\n      case 'runningOut': \n        setcurrentView('runningout');\n        setStockAppear(runningOutStocks.length);\n        break;\n\n      case 'outofstock':\n        setcurrentView('outofstock');\n        setStockAppear(outOfStock.length);\n        break;\n    }\n  }\n    \n    useEffect(() => { \n      let stockArr = [];\n        let db = stocksRef;\n          db\n          .where('stockQuantity', '>' , 0)\n          .onSnapshot(res => { \n            res.docs.forEach(item => {\n              stockArr.push(item.data());\n              setStockList([...stockArr]);\n            })\n          })\n    } ,[]);\n\n    useEffect(() => {\n      let runningOutArr = []\n      stocksRef\n      .get()\n      .then(res => {\n        res.docs.forEach(item => { \n          let watchQty = item.data().stockWatchQuantity;\n          let stockQuantity = item.data().stockQuantity;\n          if(watchQty === stockQuantity) { \n            runningOutArr.push(item.data());\n          };\n        })\n        setRunningOutStocks([...runningOutArr]);\n        runningOutArr = [];\n      })\n    }, [])\n\n    useEffect(() => {\n      let outOfStockArr = []\n      let stocksRef = firebase.firestore()\n      .collection('approved')\n      .doc(approvedUser)\n      .collection('stock')\n      .where('stockQuantity', '==', 0)\n      .get()\n      .then(res => {\n        res.docs.forEach(item => { \n          outOfStockArr.push(item.data())\n        })\n        setOutOfStock([...outOfStockArr]);\n        outOfStockArr = [];\n      })\n    }, [])\n\n    \n  let [currentView, setcurrentView] = useState('current');\n  let [stockAppear, setStockAppear] = useState(1);\n  let [stockList, setStockList] = useState([]);\n  let [runningOutStocks, setRunningOutStocks] = useState([]);\n  let [outOfStock, setOutOfStock] = useState([]);\n  \n  return ( \n    props.loggedIn \n    ? \n    <div id='stocksPage'> \n      <LoggedInHeader \n        signOut={props.signOut}\n        userImg= {props.userImg}\n      />\n\n      <div id=\"stocksBody\">\n        <Sidebar />\n        <div className=\"stocksMain\">\n          <div className=\"header\">\n            <h3>Stocks</h3>\n          </div>\n          <div className=\"options\">\n            <div \n              onClick={handleViews}\n              id={(currentView === 'current') ? 'current' : 'currentStocks'}\n            >\n              Current Stocks\n            </div> \n            <div\n            onClick={handleViews}\n            id={(currentView === 'runningout') ? 'current' : 'runningOut'}\n            >\n              Running Out\n            </div> \n            <div \n            onClick={handleViews}\n            id={(currentView === 'outofstock') ? 'current' : 'outofstock'}\n            >\n              Out Of Stock\n            </div> \n          </div>\n\n          <div className=\"stocksList\">\n          <div className=\"top\">\n            <h3>Item Name</h3>\n            <h3>Item Quantity</h3>\n            <h3>Updated Date</h3>\n          </div>\n\n          <div \n            className=\"loadingBox\"\n            style={{\n              display: ((stockAppear > 0) ? 'none' : 'grid')\n            }} \n          >\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div\n            className='stockBox'\n            id='mainStock'\n            style={{ \n              display: \n               `${(currentView === 'current') ? 'block' : 'none'}`\n            }}\n          >\n            { \n              /* for current stocks */\n              stockList.map((item, index) => {\n                let date = item.date.split(' ').join('/');\n                return ( \n                <StockItem \n                  location='/stocks/'\n                  lastUpdate={item.lastUpdate}\n                  key={index}\n                  itemId={item.id}\n                  itemName={item.stockName}\n                  itemQuantity={item.stockQuantity}\n                  itemLastUpdate={date}\n                />\n                )\n              })\n            \n            }\n          </div>\n          <div \n            className='stockBox'\n            id=\"runningOut\"\n            style={{ \n              display: \n               `${(currentView === 'runningout') ? 'block' : 'none'}`\n            }}\n          >\n            {\n              runningOutStocks.map((item, index) => {\n                let date = item.date.split(' ').join('/');\n                return ( \n                  <StockItem \n                    location='/stocks/'\n                    lastUpdate={item.lastUpdate}\n                    key={index}\n                    itemId={item.id}\n                    itemName={item.stockName}\n                    itemQuantity={item.stockQuantity}\n                    itemLastUpdate={date}\n                />\n                )\n              })\n            }\n          </div>\n          <div \n            className='stockBox'\n            id=\"outOfStock\"\n            style={{ \n              display: \n               `${(currentView === 'outofstock') ? 'block' : 'none'}`\n            }}\n          >\n            { \n              outOfStock.map((item, index) => { \n                let date = item.date.split(' ').join('/');\n                return ( \n                  <StockItem \n                    location='/stocks/'\n                    lastUpdate={item.lastUpdate}\n                    key={index}\n                    itemId={item.id}\n                    itemName={item.stockName}\n                    itemQuantity={item.stockQuantity}\n                    itemLastUpdate={date}\n                    lastUpdate={item.lastUpdate}\n                />\n                )\n              })\n            }\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    : \n    <Redirect to='/store' />\n    \n  )\n}\n\nexport default Stocks;","import React, {useState} from 'react';\nimport { \n  useParams\n} from 'react-router-dom';\nimport LoggedInHeader from '../../Components/LoggedInHeader/LoggedInHeader';\nimport Sidebar from '../../Components/Sidebar/Sidebar';\nimport './StockPage.scss';\nimport firebase from '../../Firebase';\nimport { useEffect } from 'react';\nimport {Redirect, withRouter} from 'react-router-dom';\n\nconst StockPage = (props)  => { \n\n  props.redirectStockPageHandler(true);\n\n  let id = useParams();\n    let dateClass = new Date();\n    let fullDate = `${dateClass.getDate()} ${dateClass.getMonth()} ${dateClass.getFullYear()}`;\n  const handleInputChange = (e) => { \n    let elemId = e.target.id;\n    switch(elemId) { \n      case 'stockName': \n        setStock(stock, stock.stockName = e.target.value);\n        setStock(stock, stock.lastUpdate = fullDate)\n        break;\n      case 'stockQuantity': \n        setStock(stock, stock.stockQuantity = parseInt(e.target.value));\n        setStock(stock, stock.lastUpdate = fullDate)\n        break;\n      case 'sellingPrice':\n        setStock(stock, stock.sellingPrice = parseInt(e.target.value));\n        setStock(stock, stock.lastUpdate = fullDate)\n        break;\n      case 'purchasePrice': \n        setStock(stock, stock.purchasePrice = parseInt(e.target.value));\n        setStock(stock, stock.lastUpdate = fullDate)\n        break;\n      case 'stockWatchQuantity': \n        setStock(stock, stock.stockWatchQuantity = parseInt(e.target.value));\n        setStock(stock, stock.lastUpdate = fullDate)\n        break;\n    }\n  }\n\n  //updates store's stock\n  // const updateStoreStock = (e) => { \n  //   setStockInStoreChange(e.target.value)\n  //   firebase.firestore()\n  //     .collection('approved')\n  //     .doc(props.approvedUser)\n  //     .collection('store')\n  //     .doc(e.target.id.toLowerCase())\n  //     .collection('stocks')\n  //     .doc(stock.stockName)\n  //     .update({\n  //       stockName: stock.stockName,\n  //       stockQuantity: parseInt(e.target.value)\n  //     })\n  //     .then(() => { \n  //       firebase.firestore()\n  //       .collection('approved')\n  //       .doc(props.approvedUser)\n  //       .collection('stock')\n  //       .doc(stock.stockName.toLowerCase())\n  //       .update({ \n  //         stockQuantity: stock.stockQuantity - parseInt(stockInStoreChange)\n  //       })\n  //     })\n  // }\n\n\n  useEffect(() => { \n    let cleanUp = firebase.firestore()\n    .collection('approved')\n    .doc(props.approvedUser)\n    .collection('stock')\n    .where('id', '==', id.id )\n    .get()\n    .then(d => { \n      d.docs.forEach(item => {\n        let arr = item.data()\n        setStock(arr);\n        setStockId(stockId = item.id);\n\n        //at this time 5:35am, I give up\n      //   //setting the stock into each store\n      //   props.storesList.map((item, index) => { \n      //   let newArr = []\n      //   setStoreCount(storeCount+=1)\n      //   firebase.firestore()\n      //     .collection('approved')\n      //     .doc(props.approvedUser)\n      //     .collection('store')\n      //     .doc(item.storeName)\n      //     .collection('stocks'\n      //     .doc(stockId)\n      //     .get()\n      //     .then(doc => {\n      //       newArr.push(doc.data())\n      //       // doIt(newArr)\n      //       setStoresStock([...storesStock, storesStock.push(doc.data())])\n      //     })\n      //     setStoresStock(storesStock.push(newArr))\n      // })\n      })\n    })\n  }, [])\n\n\n  const formSubmitted = (e) => { \n    e.preventDefault();\n    setUpdateButton('Updating...');\n    let dbRef = firebase.firestore()\n      .collection('approved')\n      .doc(props.approvedUser)\n      .collection('stock')\n      .doc(stockId)\n      .update(stock)\n      .then(d => { \n        \n        props.storesList.forEach(item => {\n          firebase.firestore()\n            .collection('approved')\n            .doc(props.approvedUser)\n            .collection('store')\n            .doc(item.storeName)\n            .collection('stocks')\n            .doc(stockId)\n            .update({\n              sellingPrice: stock.sellingPrice,\n              purchaseStore: stock.purchasePrice\n            })\n        })\n\n        setUpdateButton('Update item');\n      })\n  }\n\n  const deleteItemHandler = () => { \n    const redirectTo = () => { \n      setShouldNotRedirect(false);\n    }\n\n    let dbRef = firebase.firestore()\n    .collection('approved')\n    .doc(props.approvedUser)\n    .collection('stock')\n    .doc(stockId)\n    .delete()\n    .then((res) => { \n      props.storesList.forEach(item => {\n        firebase.firestore()\n          .collection('approved')\n          .doc(props.approvedUser)\n          .collection('store')\n          .doc(item.storeName)\n          .collection('stocks')\n          .doc(stockId)\n          .delete()\n          .then(d => { \n            console.log('deleted');\n          })\n        props.redirectStockPageHandler(false);\n      })\n    });\n  };\n\n  let [stock, setStock] = useState([]);\n  let [stockId, setStockId] = useState('');\n  let [updateButton, setUpdateButton] = useState('update item');\n  let [shouldNotRedirect, setShouldNotRedirect] = useState(true);\n  return ( \n    props.redirectStockPage ? \n    <div id=\"stockPage\">\n      <LoggedInHeader \n        signOut={props.signOut}\n        userImg= {props.userImg}\n      />\n\n      <div className=\"stockpageBody\">\n        <Sidebar />\n        <div className=\"stockPageMain\">\n          <div id=\"heading\">\n            <div>\n              <h1>{stock.stockName}</h1>\n              <p>added by {stock.adminInCharge}</p>\n              <p>date added: { stock.date ?  stock.date.split(' ').join('/') : ''}</p>\n\n            </div>\n            { \n              props.admin\n              ? \n              <div \n              onClick={deleteItemHandler}\n              className=\"bin\"\n            ></div>\n            : \n            ''\n            }\n          </div>\n\n          <form onSubmit={formSubmitted} >\n            <div id='inputs'>\n              {/* <div>\n                <label htmlFor='stockName'>Item Name</label>\n                <input \n                  onChange={handleInputChange}\n                  type='text'\n                  id='stockName'\n                  placeholder={stock.stockName}\n                />\n              </div> */}\n\n              <div>\n                <label htmlFor='stockQuantity'>Item Quantity</label>\n                <input \n                  onChange={handleInputChange}\n                  type='number'\n                  id='stockQuantity'\n                  placeholder={stock.stockQuantity}\n\n                />\n              </div>\n\n              <div>\n                <label htmlFor='stockSelling'>Selling Price</label>\n                <input \n                  onChange={handleInputChange}\n                  type='number'\n                  id='sellingPrice'\n                  placeholder={stock.sellingPrice}\n\n                />\n              </div>\n\n              <div>\n                <label htmlFor='stockSelling'>Watch Quantity</label>\n                <input \n                  onChange={handleInputChange}\n                  type='number'\n                  id='stockWatchQuantity'\n                  placeholder={stock.stockWatchQuantity}\n                />\n              </div>\n\n              <div>\n                <label htmlFor='stockPrice'>Purchase Price</label>\n                <input \n                  onChange={handleInputChange}\n                  type='number'\n                  id='purchasePrice'\n                  placeholder={stock.purchasePrice}\n\n                />\n              </div>\n\n              <div>\n                <label htmlFor='stockPrice'>Purchase Store</label>\n                <input \n                  onChange={handleInputChange}\n                  type='text'\n                  id='purchaseStore'\n                  placeholder={stock.purchaseStore}\n                />\n              </div>\n\n            </div>\n            { \n              props.admin \n              ? \n              <button\n            > \n              {updateButton} \n            </button>\n            : \n            ''\n            }\n          </form>\n        </div>\n      </div>\n    </div>\n    : \n    <Redirect to='/stocks' />\n  )\n}\n\n\nexport default StockPage;","import React, { useState } from 'react'; \nimport LoggedInHeader from '../../Components/LoggedInHeader/LoggedInHeader';\nimport Sidebar from '../../Components/Sidebar/Sidebar';\nimport './AddStore.scss';\n\nconst AddStore = (props) => { \n\n  const formSumitted = (e) => { \n    e.preventDefault();\n      props.makeNewStore(storeName, attendant);\n  }\n\n  const inputChangeHandler = (e) => { \n    let elemId = e.target.id;\n\n    switch(elemId) { \n      case 'storeName': \n        setStoreName(e.target.value);\n        break;\n      case 'attendantName':\n        setAttendant({...attendant, name: e.target.value});\n        break;\n      case 'attendantPin':\n        setAttendant({...attendant, pin: e.target.value});\n        break;\n    }\n  }\n\n  let [storeName, setStoreName] = useState('');\n  let [attendant, setAttendant] = useState({ \n    name: '',\n    pin: 0,\n  });\n  let [buttonText, setButtonText] = useState(props.buttonText)\n  return ( \n    <div id='AddStorePage'> \n      <LoggedInHeader \n       signOut={props.signOut}\n       userImg= {props.userImg}\n      />\n\n      <div className=\"addStoreBody\">\n        <Sidebar />\n\n        <div className=\"addStoreMain\">\n          <div className=\"heading\">\n            <h1>Add a new store</h1>\n          </div>\n            <form \n              onSubmit={formSumitted}\n            >\n              <div id='storeData'> \n                <label htmlFor='storeName'> \n                  Store Name\n                </label>\n                <input \n                  id='storeName'\n                  type=\"text\"\n                  onChange={inputChangeHandler}\n                  placeholder='Pota'\n                />\n              </div>\n\n              <div className=\"attendantsBox\">\n                <div id='attendant'>\n                  <label htmlFor='attendantName'> \n                    attendant's name\n                  </label>\n                  <input \n                    id='attendantName'\n                    type=\"text\"\n                    onChange={inputChangeHandler}\n                    placeholder='Jim'\n                  />\n                </div>\n\n                <div id='attendant'>\n                  <label htmlFor='attendantPin'> \n                    attendant's secret pin\n                  </label>\n                  <input \n                    id='attendantPin'\n                    type=\"number\"\n                    onChange={inputChangeHandler}\n                    placeholder='29384'\n                    maxLength={5}\n                  />\n                </div>\n              </div>\n\n              <button\n                onClick={formSumitted}\n              >\n                {buttonText}\n              </button>\n            </form>\n        </div>\n      </div>\n    </div> \n  )\n}\n\nexport default AddStore;","import React, { useState } from 'react';\nimport LoggedInHeader from '../../Components/LoggedInHeader/LoggedInHeader';\nimport Sidebar from '../../Components/Sidebar/Sidebar';\nimport './Manage.scss';\nimport { \n  Link\n} from 'react-router-dom'\n\nconst Manage = (props) => { \n\n  const deleteStore = (e) => { \n    props.deleteStore(e.target.id);\n  }\n\n  let [storeClick, setStoreClicked] = useState('');\n  return ( \n    <div className=\"managePage\">\n      <LoggedInHeader \n        signOut={props.signOut}\n        userImg= {props.userImg}\n      />\n\n      <div className=\"managePageBody\">\n        <Sidebar />\n\n        <div className=\"managePageMain\">\n          <div id='storeList' >\n          { \n            props.storeList.map((item, index) => { \n              return ( \n                <div className=\"Store\" key={index}>\n                  <Link \n                  to={`/manage/${item.storeName}`}\n                  id='Store'\n                  >\n                  <div></div>\n                  <p>{item.storeName}</p>\n                  </Link>\n                  <div \n                    id={item.storeName}\n                    className=\"bin\"\n                    onClick={deleteStore}\n                  >\n                  </div>\n                </div>\n              )\n            }) \n          }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Manage;","import React from 'react';\nimport './Expenses.scss'\n\nconst Expenses = (props) => { \n\n  return ( \n    <div className=\"expenses\">\n\n      <div className=\"details\">\n        <div className=\"expenseHead\">\n          <h3>{props.attendant}</h3>\n          <h3>{`₦${props.cost}`}</h3>\n        </div>\n        <h1>{props.expenseTitle}</h1>\n        <p> {props.expenseBody} </p>\n\n        <div className=\"time\">\n          <p>{props.expenseDate}</p>\n          <p>{props.expenseTime}</p>\n        </div>\n      </div>\n\n      <div \n        id={props.id}\n        className=\"delBttn\"\n        onClick={props.deleteExpense}\n      >\n      </div>\n    </div>\n  )\n}\n\nexport default Expenses","import React, { useState } from 'react';\nimport LoggedInHeader from '../../Components/LoggedInHeader/LoggedInHeader';\nimport Sidebar from '../../Components/Sidebar/Sidebar';\nimport './StorePage.scss';\nimport { useParams } from 'react-router-dom'\nimport { useEffect } from 'react';\nimport firebase from '../../Firebase'\nimport StockItem from '../../Components/StockItem/StockItem';\nimport Expenses from '../../Components/Expenses/Expenses';\n\nconst StorePage = (props) => {\n\n  let id = useParams().id;\n  let dateClass = new Date()\n  let currentDate = `${dateClass.getDate()} ${dateClass.getMonth()+1} ${dateClass.getFullYear()}`\n  const storeExpenseRef =  firebase.firestore()\n    .collection('approved')\n    .doc(props.approvedUser)\n    .collection('store')\n    .doc(id.toLowerCase())\n    .collection('transactions')\n    .doc(currentDate)\n    .collection('expenses')\n\n\n  //doneBttnClicked\n  const doneBttnClicked = (e) => {\n    let stockCurrentQuantity = parseInt(e.target.id);\n    let newValue = parseInt(e.target.previousElementSibling.value);\n    let elemName = e.target.dataset.name;\n    let storeRef = firebase.firestore()\n      .collection('approved')\n      .doc(props.approvedUser)\n      .collection('stock')\n      .doc(elemName.toLowerCase())\n    \n    let storeStockRef = firebase.firestore()\n    .collection('approved')\n    .doc(props.approvedUser)\n    .collection('store')\n    .doc(id)\n    .collection('stocks')\n    .doc(elemName.toLowerCase())\n\n\n    if(newValue >= 0) { \n      if(newValue !== stockCurrentQuantity) { \n        if(newValue > stockCurrentQuantity) { \n          storeRef\n            .get().then(d => {\n              let mainStockQuantity = d.data().stockQuantity;\n              if(mainStockQuantity >= parseInt(newValue) - parseInt(stockCurrentQuantity)) { \n                storeStockRef.update({ \n                  stockQuantity: newValue\n                })\n                storeRef.update({ \n                  stockQuantity: mainStockQuantity-parseInt(newValue - stockCurrentQuantity)\n                })\n              }\n              else { \n              console.log('it got here')\n                \n              }\n            })\n        }\n        else if(newValue < stockCurrentQuantity) { \n          storeRef.get()\n            .then(doc => {\n              if(newValue < doc.data().stockQuantity) { \n                storeRef.update({ \n                  stockQuantity: doc.data().stockQuantity + parseInt(newValue + stockCurrentQuantity )\n                });\n                storeStockRef.update({ \n                  stockQuantity: newValue,\n                })\n              }\n              else { \n                storeRef.update({ \n                  stockQuantity: doc.data().stockQuantity + parseInt(newValue - stockCurrentQuantity )\n                });\n                storeStockRef.update({ \n                  stockQuantity: newValue,\n                })\n              }\n            })\n        }\n      }\n    }\n  }\n\n  const overViewChanged = (e) => {\n    setOverViewDate(e.target.value);\n    let mainDate = e.target.value.split('-').reverse().join(' ');\n    setShowOverViewData(true);\n    let arr = [];\n    let profit = 0;\n    if(overViewStatus.toLowerCase() === 'sales') { \n      setOverviewExpenses([]);\n      firebase.firestore()\n      .collection('approved')\n      .doc(props.approvedUser)\n      .collection('store')\n      .doc(id.toLowerCase())\n      .collection('transactions')\n      .doc(mainDate)\n      .collection('sales')\n      .get()\n      .then(res => { \n        res.docs.forEach(item => {\n          profit += item.data().totalAmount\n          arr.push(item.data())\n        })\n        setOverViewProfit(profit);\n        setOverviewSales([...arr]);\n        profit = 0;\n        arr = [];\n      })\n    }\n    else { \n      firebase.firestore()\n      .collection('approved')\n      .doc(props.approvedUser)\n      .collection('store')\n      .doc(id.toLowerCase())\n      .collection('transactions')\n      .doc(mainDate)\n      .collection('expenses')\n      .get()\n      .then(res => { \n        res.docs.forEach(item => {\n          arr.push(item.data())\n        })\n        setOverviewExpenses([...arr]);\n        arr = [];\n      })\n    };\n\n    // props.setOverViewDate(mainDate);\n\n  };\n\n  const overViewOptions = (e) => {\n    let text = e.target.textContent.toLowerCase();\n\n    if(text === 'expenses') { \n      setOverViewStatus('expenses')\n    }\n    else { \n      setOverViewStatus('sales')\n    }\n  }\n\n  \n  //optionsClicked\n  const optionClicked = (e) => {\n\n    let elem = e.target.id;\n    switch(elem) { \n      case 'stocks': \n        setView('allStocks');\n        break;\n\n      case 'sales':\n        setView('sales');\n        break;\n\n      case 'expenses': \n        setView('expenses');\n        break;\n\n      case 'overview':\n        setView('overview');\n        break;\n\n    }\n  }\n\n  useEffect(() => {\n    let overViewCurrentDate = `${dateClass.getFullYear()}-${dateClass.getMonth()+1}-${dateClass.getDate()}`;\n    \n    setOverViewDate(overViewCurrentDate);\n    props.setCurrentStore(id);\n\n    let salesArr = [];\n    let stocksArr = [];\n    let expensesArr = [];\n    let profit = 0;\n    \n    firebase.firestore()\n      .collection('approved')\n      .doc(props.approvedUser)\n      .collection('store')\n      .doc(id)\n      .collection('stocks')\n      .onSnapshot(data => {\n        data.docs.forEach(item => {\n          stocksArr.push(item.data())\n        })\n        setAvailablesStock([...stocksArr]);\n        stocksArr = [];\n      });\n\n\n      firebase.firestore()\n        .collection('approved')\n        .doc(props.approvedUser)\n        .collection('store')\n        .doc(id.toLowerCase())\n        .collection('transactions')\n        .doc(currentDate)\n        .collection('sales')\n        .get()\n        .then(res => { \n          res.forEach((item) => {\n            profit += item.data().totalAmount\n            salesArr.push(item.data());\n          })\n          setProfit(`₦${profit.toLocaleString()}`);\n          profit = 0;\n          setSales([...salesArr]);\n          salesArr=[];\n        });\n\n\n        firebase.firestore()\n        .collection('approved')\n        .doc(props.approvedUser)\n        .collection('store')\n        .doc(id.toLowerCase())\n        .collection('transactions')\n        .doc(currentDate)\n        .collection('expenses')\n        .onSnapshot(res => { \n          res.forEach((item) => { \n            expensesArr.push(item.data());\n          })\n          setExpenses([...expensesArr]);\n          expensesArr=[];\n        })\n  }, [])\n\n  //delete expenses \n  const deleteExpenses = (item) => { \n    storeExpenseRef\n    .where('id', '==', item)\n    .get()\n    .then((querySnapShot) => { \n      querySnapShot.forEach(item => { \n        item.ref.delete()\n      })\n    })\n  }\n\n\n  let [availablesStock, setAvailablesStock] = useState([]);\n  let [view, setView] = useState();\n  let [sales, setSales] = useState([]);\n  let [expenses, setExpenses] = useState([]);\n  let [profit, setProfit] = useState(0);\n  let [overViewDate, setOverViewDate] = useState();\n  let [overviewSales, setOverviewSales] = useState([]);\n  let [overviewExpenses, setOverviewExpenses] = useState([]);\n  let [overViewStatus, setOverViewStatus] = useState('sales');\n  let [showOverViewData, setShowOverViewData] = useState(false);\n  let [overViewProfit, setOverViewProfit] = useState(0)\n  return (  \n    <div className='StorePage'>\n      <LoggedInHeader \n        signOut={props.signOut}\n        userImg= {props.userImg}\n      />\n\n      <div className='storePageBody'>\n        <Sidebar />\n        <div className='storePageMain'>\n          <div className='header'>\n            <h1>{id}</h1>\n            { \n              props.admin \n              ? \n              <h3 style={{ \n                color: 'white',\n                fontSize: '1.em',\n                marginBottom: '2em'\n              }}\n              >\n                Today's Profit: {profit}\n              </h3>\n              : \n              ''\n            }\n            <div className='options'>\n              <p \n                id='stocks'\n                onClick={optionClicked}\n                style={{\n                  opacity: `${(view === 'allStocks') ? '1' : '0.2'}`\n                }}\n              >\n                current stocks\n              </p>\n              <p \n                id='sales'\n                onClick={optionClicked}\n                style={{\n                  opacity: `${(view === 'sales') ? '1' : '0.2'}`\n                }}\n              >\n                today sales\n              </p>\n              <p \n                id='expenses'\n                onClick={optionClicked}\n                style={{\n                  opacity: `${(view === 'expenses') ? '1' : '0.2'}`\n                }}\n              >\n                today expenses\n              </p>\n              <p \n                id='overview'\n                onClick={optionClicked}\n                style={{\n                  opacity: `${(view === 'overview') ? '1' : '0.2'}`\n                }}\n              >\n                overview\n              </p>\n            </div>\n          </div>\n\n          <div \n            style={{\n              display: `${(view === 'allStocks') ? 'block' : 'none'}`\n            }}\n            className='allStocks'\n          >\n            { \n              availablesStock.map((item, index) => { \n                return ( \n                  <div\n                    id='storeStockItem'\n                    key={index}\n                  >\n                    <h3>{item.stockName}</h3>\n                    <input \n                      type='number'\n                      id='input'\n                      placeholder={item.stockQuantity} \n                    />\n                    <div \n                      data-name={item.stockName}\n                      id={item.stockQuantity} className='done'\n                      onClick={doneBttnClicked}\n                    >\n\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n\n          <div \n            style={{\n              display: `${(view === 'sales') ? 'block' : 'none'}`\n            }}\n            className='sales'\n          >\n          <div className='top'>\n            <h3>Item Name</h3>\n            <h3>Item Quantity</h3>\n            <h3>Updated Date</h3>\n          </div>\n            { \n              sales.length > 0 \n              ? \n                sales.map((item, index) => { \n                  return ( \n                    <StockItem \n                      key={index}\n                      location={id}\n                      itemId={`/${item.id}`}\n                      itemName={item.stockName}\n                      itemQuantity={item.stockQuantity}\n                      lastUpdate={item.date}\n                      itemLastUpdate='0'\n                    />\n                  )\n                })\n              : \n              <h1 \n                style={{ \n                  color: 'white',\n                  fontSize: '1em',\n                  textTransform: 'uppercase',\n                  width: 'fit-content',\n                  padding: '0.5em 0.9em',\n                  backgroundColor: 'white',\n                  color: 'black',\n                  marginTop: '2em',\n                  borderRadius: '300px'\n                }}\n              >\n                no sales to display\n              </h1>\n            }\n          </div>\n\n          <div \n            style={{\n              display: `${(view === 'expenses') ? 'block' : 'none'}`\n            }}\n            className='expense'\n          >\n            { \n              expenses.length > 0 \n              ? \n                expenses.map((item, index) => { \n                  return ( \n                    <Expenses \n                      key={index}\n                      cost={item.expenses.cost}\n                      attendant={item.attendant}\n                      expenseTitle={item.expenses.title}\n                      expenseBody={item.expenses.body}\n                      expenseDate={item.date}\n                      expenseTime={item.time}\n                      id={item.id}\n                      deleteExpense={() => {\n                        return deleteExpenses(item.id)\n                      }}\n                    />\n                  )\n                })\n              : \n              <h1 \n                style={{ \n                  color: 'white',\n                  fontSize: '1em',\n                  textTransform: 'uppercase',\n                  width: 'fit-content',\n                  padding: '0.5em 0.9em',\n                  backgroundColor: 'white',\n                  color: 'black',\n                  marginTop: '2em',\n                  borderRadius: '300px'\n                }}\n              >\n                no expenses to display\n              </h1>\n            }\n          </div>\n\n          <div \n            className='overview'\n            style={{ \n              display: `${view === 'overview' ? 'block' : 'none'}`\n            }}\n          >\n            <div className=\"overviewOptions\">\n              <p\n                onClick={overViewOptions}\n                style={{ \n                  opacity: `${overViewStatus === 'sales' ? '1' : '0.4'}`\n                }}\n              >\n                Sales\n              </p>\n              <p\n                onClick={overViewOptions}\n                style={{ \n                  opacity: `${overViewStatus === 'expenses' ? '1' : '0.4'}`\n                }}\n              >\n                Expenses\n              </p>\n            </div>\n\n            <form>\n              <input \n                max={`${dateClass.getFullYear()}-${dateClass.getMonth()+1}-${dateClass.getDate()}`}\n                min='2020-11-15'\n                type='date' \n                value={overViewDate ? overViewDate : ''}\n                onChange={overViewChanged}\n              />\n            </form>\n\n            <div \n              style={{\n                display: `${showOverViewData ? 'block' : 'none'}`\n              }}\n              className=\"OverViewData\"\n            >\n            <div className=\"profit\">\n              <h3>\n                Day's Cash At Hand: ₦{overViewProfit.toLocaleString()}\n              </h3>\n            </div>\n            \n              <div \n                id='overViewSales'\n                style={{ \n                  display: `${overViewStatus === 'sales' ? 'block' : 'none'}`\n                }}\n              > \n                <div className='top'>\n                  <h3>Item Name</h3>\n                  <h3>Item Quantity</h3>\n                  <h3>Updated Date</h3>\n                </div>\n                { \n                overviewSales.length > 0 \n                ? \n                  overviewSales.map((item, index) => { \n                    return ( \n                      <StockItem \n                        key={index}\n                        location={id}\n                        itemId={`/${item.id}`}\n                        itemName={item.stockName}\n                        itemQuantity={item.stockQuantity}\n                        lastUpdate={item.date}\n                        itemLastUpdate='0'\n                      />\n                    )\n                  })\n                : \n                <h1 \n                  style={{ \n                    color: 'white',\n                    fontSize: '1em',\n                    textTransform: 'uppercase',\n                    width: 'fit-content',\n                    padding: '0.5em 0.9em',\n                    backgroundColor: 'white',\n                    color: 'black',\n                    marginTop: '2em',\n                    borderRadius: '300px'\n                  }}\n                >\n                  no sales to display\n                </h1>\n              }\n              </div>\n\n              <div \n                id='overViewExpenses'\n                style={{ \n                  display: `${overViewStatus === 'expenses' ? 'block' : 'none'}`\n                }}\n              > \n                { \n                  overviewExpenses.length > 0 \n                  ? \n                    overviewExpenses.map((item) => { \n                      return ( \n                        <Expenses \n                          cost={item.expenses.cost}\n                          attendant={item.attendant}\n                          expenseTitle={item.expenses.title}\n                          expenseBody={item.expenses.body}\n                          expenseDate={item.date}\n                          expenseTime={item.time}\n                          id={item.id}\n                          deleteExpense={() => {\n                            return deleteExpenses(item.id)\n                          }}\n                        />\n                      )\n                    })\n                  : \n                  <h1 \n                    style={{ \n                      color: 'white',\n                      fontSize: '1em',\n                      textTransform: 'uppercase',\n                      width: 'fit-content',\n                      padding: '0.5em 0.9em',\n                      backgroundColor: 'white',\n                      color: 'black',\n                      marginTop: '2em',\n                      borderRadius: '300px'\n                    }}\n                  >\n                    no expenses to display\n                  </h1>\n                }\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default StorePage;","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport LoggedInHeader from '../../Components/LoggedInHeader/LoggedInHeader';\nimport firebase from '../../Firebase'; \nimport './SoldStock.scss';\n\nconst SoldStock = (props) => { \n\n  console.log(props.overViewDate);\n\n  let dateClass = new Date();\n  let currentDate = `${dateClass.getDate()} ${dateClass.getMonth()+1} ${dateClass.getFullYear()}`\n  let id = useParams().id;\n\n  const stockRef = firebase.firestore()\n  .collection('approved')\n  .doc(props.approvedUser)\n  .collection('store')\n  .doc(props.storeName)\n  .collection('transactions')\n  .doc(currentDate)\n  .collection('sales');\n\n  const deleteSales = () => {\n    let locationRef = window.location.href.split('/').length-2;\n    let storeName = window.location.href.split('/')[locationRef];\n    setStoreName(storeName);\n    stockRef\n      .where('id', '==', parseInt(id))\n      .get()\n      .then((querySnap) => {\n        querySnap.forEach(item => { \n          item.ref.delete()\n          .then(() => {\n            firebase.firestore()\n              .collection('approved')\n              .doc(props.approvedUser)\n              .collection('store')\n              .doc(props.storeName)\n              .collection('stocks')\n              .doc(stock.stockName.toLowerCase())\n              .get()\n              .then(doc => { \n                doc.ref.update({ \n                  stockQuantity: firebase.firestore.FieldValue.increment(stock.stockQuantity)\n                })\n                .then(() => {\n                  setValid(false)\n                })\n              })\n          })\n        })\n      })\n  }\n\n  useEffect(() => {\n    firebase.firestore()\n      .collection('approved')\n      .doc(props.approvedUser)\n      .collection('store')\n      .doc(props.storeName)\n      .collection('transactions')\n      .doc(currentDate)\n      .collection('sales')\n      .where('id', '==', parseInt(id))\n      .get()\n      .then(d => {\n        d.docs.forEach(item => {\n          setStock(item.data())\n        })\n      })\n  }, [])\n\n  let [stock, setStock] = useState();\n  let [valid, setValid] = useState(true);\n  let [storeName, setStoreName] = useState('')\n  return ( \n    valid ?\n    <div id='soldstockpage'>\n      <LoggedInHeader \n        signOut={props.signOut}\n        userImg= {props.userImg}\n      />\n      { \n        stock ? \n        <div className=\"soldstockMain\">\n\n        <div className=\"details\">\n          <div className=\"itemDetails\">\n            <div className=\"itemDetailsHeader\">\n              <h3 className=\"label\">\n                Item Details\n              </h3>\n              <div \n                onClick={deleteSales}\n                className=\"del\"\n              >\n              </div>\n            </div>\n            <div className=\"detailItems\">\n              <div className=\"inputItems\">\n                <label htmlFor='stockName'>Stock Name</label>\n                <input \n                  id='stockName'\n                  data-fill='false'\n                  value={stock.stockName}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='attendant'>Attendant</label>\n                <input \n                  id='attendant'\n                  data-fill='false'\n                  value={stock.staffInCharge}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='Quantity'>Quantity</label>\n                <input \n                  id='Quantity'\n                  data-fill='false'\n                  value={stock.stockQuantity}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='sellingPrice'>Selling Price</label>\n                <input \n                  id='sellingPrice'\n                  data-fill='false'\n                  value={stock.sellingPrice}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='purchasePrice'>Purchase Price</label>\n                <input \n                  id='purchasePrice'\n                  data-fill='false'\n                  value={stock.purchasePrice}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='totalPrice'>Total Price</label>\n                <input \n                  id='totalPrice'\n                  data-fill='false'\n                  value={stock.totalAmount}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='totalPrice'>IMEI</label>\n                <input \n                  id='IMEI'\n                  data-fill='false'\n                  value={stock.imei}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='dateofsale'>Date Of Sale</label>\n                <input \n                  id='dateofsale'\n                  data-fill='false'\n                  value={currentDate.split(' ').join('/')}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='timesold'>Time Sold</label>\n                <input \n                  id='dateofsale'\n                  data-fill='false'\n                  value={stock.time}\n                />\n              </div>\n            </div>\n\n            <h3 className=\"label\" style={{marginTop: '3em'}} >\n              Customer Details\n            </h3>\n\n            <div id=\"detailItems\">\n              <div className=\"inputItems\">\n                <label htmlFor='customerName'>Customer Name</label>\n                <input \n                  id='customerName'\n                  data-fill='false'\n                  value={stock.customerName}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='customerAddress'>Customer Address</label>\n                <input \n                  id='customerAddress'\n                  data-fill='false'\n                  value={stock.customerAddress}\n                />\n              </div>\n\n              <div className=\"inputItems\">\n                <label htmlFor='customerPhoneNumber'>Customer Phone No.</label>\n                <input \n                  id='stoccustomerPhoneNumberkName'\n                  data-fill='false'\n                  value={stock.customerPhoneNumber}\n                />\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"printWindow\">\n\n        </div>\n      </div>\n      : \n      <h2>fetching data</h2>\n      }\n\n    </div>\n    : \n    <Redirect to={`/manage/${storeName}`} />\n  )\n}\n\nexport default SoldStock;","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { BrowserRouter, Switch, Route, Redirect, useParams } from 'react-router-dom';\nimport Login from './Pages/Login/Login';\nimport firebase from './Firebase';\nimport Store from './Pages/Store/Store';\nimport AddStock from './Pages/AddStock/AddStock';\nimport Stocks from './Pages/Stocks/Stocks';\nimport StockPage from './Pages/StockPage/StockPage';\nimport AddStore from './Pages/AddStore/AddStore';\nimport Manage from './Pages/Manage/Manage';\nimport StorePage from './Pages/StorePage/StorePage';\nimport SoldStock from './Pages/SoldStock/SoldStock';\n\nconst App = () => {\n  \n\n  let approvedUser = 'bolu';\n  let userName = firebase.auth().currentUser;\n  let adminList = ['akpan', 'bolu', 'agbelemo'];\n\n\n  //set current store. this is coming from storePage\n  const handlerOverViewDate = (e) => {\n    console.log('got here')\n    setOverViewDate(e);\n  }\n\n  const setCurrentStore = (e) => {\n    setCurrentStoreName(e)\n  }\n  //Function for managePage\n  const deleteStore = (e) => {\n    firebase.firestore()\n      .collection('approved')\n      .doc(approvedUser)\n      .collection('store')\n      .doc(e)\n      .delete()\n      .then(d => { \n      })\n  }\n\n  useEffect(() => { \n    let newArr = [];\n    firebase.firestore()\n      .collection('approved')\n      .doc(approvedUser)\n      .collection('store')\n      .where('show', '==', true)\n      .get()\n      .then(data => { \n        data.docs.forEach(item => { \n          newArr.push(item.data());\n        })\n        setStoreList(newArr);\n        newArr=[];\n      })\n  }, [])\n  \n  //functions for stockPage\n  const redirectStockPageHandler = (event) => { \n    setRedirectStockPage(event);\n  }\n\n  //function for addStore page \n  const makeNewStore = (store, attendant) =>{ \n\n    if(store.length > 0 && attendant.pin.length > 4) {\n\n      let dateClass = new Date();\n      let fullDate = `${dateClass.getDate()} ${dateClass.getMonth()} ${dateClass.getFullYear()}`;\n      setButtonText('processing');\n      let storesRef = firebase.firestore()\n      .collection('approved')\n      .doc(approvedUser)\n      .collection('store')\n      .doc(store.toLowerCase())\n      .set({ \n        storeName: store.toLowerCase(),\n        attendants: [ \n          {name: attendant.name, pin: attendant.pin}\n        ],\n        createdBy: userName.displayName,\n        dateAdded: fullDate,\n        show: true,\n      })\n      .then((d) => { \n        firebase.firestore()\n          .collection('approved')\n          .doc(approvedUser)\n          .collection('stock')\n          .get()\n          .then(d => { \n            d.docs.forEach(item => { \n              firebase.firestore()\n              .collection('approved')\n              .doc(approvedUser)\n              .collection('store')\n              .doc(store.toLowerCase())\n              .collection('stocks')\n              .doc(item.data().stockName.toLowerCase())\n              .set({...item.data(), stockQuantity: 0})\n              .then(d => { \n              })\n            })\n          })\n\n\n        setButtonText('done');\n        setTimeout(() => {\n          setButtonText('create store');\n        }, 1000);\n      })\n    }\n    \n  }\n\n  //props call from addStock\n  const PushItem = (item) => { \n    let dateClass = new Date();\n    setaddStockBttn('please wait');\n    let fullDate = `${dateClass.getDate()} ${dateClass.getMonth()} ${dateClass.getFullYear()}`;\n    firebase.firestore()\n    .collection('approved')\n    .doc(approvedUser)\n    .collection('stock')\n    .doc(item.stockName.toLowerCase())\n    .set({ \n      ...item, \n      date: fullDate, \n      id: `${dateClass.getTime()}`,\n      adminInCharge: userName.displayName\n    })\n    .then(data => { \n        \n        //add the new stock to all stores\n        storeList.forEach(store => { \n          firebase.firestore()\n            .collection('approved')\n            .doc(approvedUser)\n            .collection('store')\n            .doc(store.storeName)\n            .collection('stocks')\n            .doc(item.stockName.toLowerCase())\n            .set({ \n              ...item, \n              date: fullDate, \n              id: `${dateClass.getTime()}`,\n              adminInCharge: userName.displayName,\n              stockQuantity: 0\n            })\n        })\n\n        setaddStockBttn('done');\n        setaddedStock('Stock has been added successfully');\n        setShowSucess(true);\n        let success = setInterval(() => {\n          setShowSucess(false);\n          setaddStockBttn('add to store');\n          runThis()\n        }, 1000);\n\n        let runThis = () => { \n          clearInterval(success);\n        }\n    })\n    .catch(err => { \n      setaddedStock('There was an error, try again.')\n    })\n  }\n\n  //set the current storeName\n  let [currentStoreName, setCurrentStoreName] = useState('')\n  //function used to logout user.\n  const signOutHandler = (event) => { \n    firebase.auth().signOut()\n    .then(() => { \n      return setLoggedIn(false);\n    })\n    .catch((error) => { \n      console.error(error)\n    })\n  };\n\n  //automatically log a user in\n  firebase.auth().onAuthStateChanged(user => { \n    if(user) { \n      let userName = firebase.auth().currentUser.displayName;\n      userName.toLowerCase().split(' ').forEach(name => { \n        if(\n          name === 'akpan' ||\n          name === 'james' ||\n          name === 'samuel' ||\n          name === 'boluwatife'\n        ) { \n          setIsAdmin(true);\n        }\n      })\n      setLoggedIn(true);\n      setUserImg(user.photoURL);\n    }\n    else { \n      setLoggedIn(false);\n    }\n  })\n\n  //admin props\n  let [loggedIn, setLoggedIn] = useState(false);\n  let [userImg, setUserImg] = useState('');\n  let [cashTotal, setcashTotal] = useState(0);\n  let [totals, setTotlas] = useState({ \n    // cashTotal: 12000,\n    // cashReturn: 89503,\n    // cashProfit: 28990,\n  });\n\n\n  //hooks for addStock component\n  let [addedStock, setaddedStock] = useState('Stock has been added successfully');\n  let [ShowSucess, setShowSucess] = useState(false);\n  let [addStockBttn, setaddStockBttn] = useState('add to store');\n\n  //hooks for stockPage comp\n  let [individualStock, setindividualStock] = useState([]);\n  let [redirectStockPage, setRedirectStockPage] = useState(true);\n\n  //hooks for addStore comp\n  let [buttonText, setButtonText] = useState('create store')\n  \n  //hooks for manage comp\n  let [storeList, setStoreList] = useState([]);\n\n  //hooks for stores stocks page\n  const [StoreStock, setStoreStock] = useState([]);\n\n  //hooks for soldStock \n  let [overViewDate, setOverViewDate] = useState();\n  //admins \n  let [isadmin, setIsAdmin] = useState(false);\n  return (\n    loggedIn \n    ?\n      <BrowserRouter>\n        <Route>\n          <Redirect to='/manage' />\n        </Route> \n        <Switch>  \n          <Route \n            exact\n            path='/store'\n            component={() => {\n              return (\n              <Store \n                admin={isadmin}\n                loggedIn={loggedIn}\n                userImg={userImg}\n                cashTotal={cashTotal}\n                signOut={signOutHandler}\n                cashTotal={totals.cashTotal}\n                cashReturn={totals.cashReturn}\n                cashProfit={totals.cashProfit}\n              />\n              )\n            }}\n          >\n          </Route>\n          <Route\n            path='/addstock'\n            component={() => { \n              return (\n                <AddStock \n                  loggedIn={loggedIn}\n                  signOut={signOutHandler}\n                  userImg={userImg}\n                  approvedUser={approvedUser}\n                  PushItem={PushItem}\n                  addedStock={addedStock}\n                  ShowSucess={ShowSucess}\n                  addStockBttn={addStockBttn}\n                />\n              )\n            }}\n          > \n          </Route>\n          <Route \n            exact\n            path='/stocks'\n            component={() => { \n              return ( \n                <Stocks \n                  loggedIn={loggedIn}\n                  signOut={signOutHandler}\n                  userImg={userImg}\n                  approvedUser={approvedUser}\n                />\n              )\n            }}\n          > \n\n          </Route>\n          <Route \n            exact\n            path='/stocks/:id'\n            component={() => { \n              return ( \n                <StockPage \n                  admin={isadmin}\n                  storesList={storeList}\n                  loggedIn={loggedIn}\n                  signOut={signOutHandler}\n                  userImg={userImg}\n                  approvedUser={approvedUser}\n                  redirectStockPage={redirectStockPage}\n                  redirectStockPageHandler={redirectStockPageHandler}\n                />\n              )\n            }}\n          > \n\n          </Route>\n          <Route\n            exact\n            path='/addstore'\n            component={() => {\n              return ( \n                <AddStore \n                  loggedIn={loggedIn}\n                  signOut={signOutHandler}\n                  userImg={userImg}\n                  approvedUser={approvedUser}\n                  makeNewStore={makeNewStore}\n                  buttonText={buttonText}\n                />\n              )\n            }}\n          >\n\n          </Route>\n\n          <Route\n            exact\n            path='/manage'\n            component={() => {\n              return (\n                <Manage \n                  loggedIn={loggedIn}\n                  signOut={signOutHandler}\n                  userImg={userImg}\n                  approvedUser={approvedUser}\n                  storeList={storeList}\n                  deleteStore={deleteStore}\n                />\n              )\n            }}\n          >\n          </Route>\n          <Route\n            exact\n            path='/manage/:id'\n            component={() => {\n              return ( \n                <StorePage \n                  admin={isadmin}\n                  setCurrentStore={setCurrentStore}\n                  StoreStock={StoreStock}\n                  loggedIn={loggedIn}\n                  signOut={signOutHandler}\n                  userImg={userImg}\n                  approvedUser={approvedUser}\n                  setOverViewDate={(e) => {\n                    return setOverViewDate(e)\n                  }}\n                />\n              )\n            }}\n          > \n\n          </Route>\n          <Route\n            path='/manage/:id/:id'\n            component={() => {\n              return ( \n                <SoldStock \n                  overViewDate={overViewDate}\n                  storeName={currentStoreName}\n                  loggedIn={loggedIn}\n                  signOut={signOutHandler}\n                  userImg={userImg}\n                  approvedUser={approvedUser}\n                />\n              )\n            }}\n          > \n\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    :\n      <BrowserRouter className=\"App\">\n        <Switch> \n          <Route \n            exact\n            path='/'\n            component={() => { \n              return ( \n                <Login\n                  approvedUser={approvedUser}\n                />\n              )\n            }}\n          >\n          </Route>\n          <Route \n            exact\n            path='/store'\n            component={Store}\n          >\n          </Route>\n          <Route\n            path='/addstock'\n            component={AddStock}\n          >\n          </Route>\n          <Route\n            path='/'\n            component={Stocks}\n          >\n          </Route>\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}